// This file has been autogenerated from parsing an Objective-C header file added in Xcode.using System;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using System.Collections.Generic;
using Stampsy.Social;
using System.Threading.Tasks;
using System;
using System.IO;
using SDWebImage;
using System.Threading;

namespace Sociopath
{
    public class MetadataSource : UITableViewSource
    {
        List<DropboxManager.Metadata> _metadata;

        public WeakReference Controller;

        public static readonly NSString Key = (NSString)"Cell";

        CancellationTokenSource _cts;

        public MetadataSource (IEnumerable<DropboxManager.Metadata> metadata)
        {
            _metadata = new List<DropboxManager.Metadata> (metadata);
        }

        public override int RowsInSection (UITableView tableview, int section)
        {
            return _metadata.Count;
        }

        public override UITableViewCell GetCell (UITableView tableView, NSIndexPath indexPath)
        {
            var cell = tableView.DequeueReusableCell (Key) as MetadataCell;
            if (cell == null) {
                cell = new MetadataCell (Key);
            }

            var data = _metadata[indexPath.Row];

            cell.SetMetadata (data);

            return cell;
        }

        public void Add (IEnumerable<DropboxManager.Metadata> users)
        {
            _metadata.AddRange (users);
        }

        public override void RowSelected (UITableView tableView, NSIndexPath indexPath)
        {
            var data = _metadata[indexPath.Row];
            var destPath = MetadataCell.GetThumbnailPath (data.Path);

            if (_cts != null) {
                _cts.Cancel ();
            }

            _cts = new CancellationTokenSource ();

            Services.Dropbox.LoadFileAsync (data.Path, destPath, (progress) => {
                var cell = tableView.CellAt (indexPath) as MetadataCell;
                if (cell != null) cell.SetProgress (progress);
            }, _cts.Token).ContinueWith (t => {
                if (t.IsCanceled) {
                    BeginInvokeOnMainThread (() => {
                        var cell = tableView.CellAt (indexPath) as MetadataCell;
                        if (cell != null) cell.SetMetadata (data);
                    });
                    return;
                } else if (t.IsFaulted) {
                    Console.WriteLine (t.Exception);
                    return;
                }

                var controller = (DropboxViewController)Controller.Target;
                controller.ShowImage (destPath);
            });
        }
    }
}

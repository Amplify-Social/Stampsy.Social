// This file has been autogenerated from parsing an Objective-C header file added in Xcode.using System;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using System.Collections.Generic;
using Stampsy.Social;
using System.Threading.Tasks;
using System;
using System.IO;
using SDWebImage;
using System.Threading;

namespace Sociopath
{
	public class MetadataCell : UITableViewCell
	{
        CancellationTokenSource _cts;

        static readonly UIImage _cellImage = UIImage.FromBundle ("User");

        public MetadataCell (IntPtr handle) : base (handle)
        {
            
        }

        public MetadataCell (NSString key) : base (UITableViewCellStyle.Subtitle, key) 
        {
            ImageView.Image = _cellImage;
        }

        public override void PrepareForReuse ()
        {
            if (_cts != null) {
                _cts.Cancel ();
                _cts = null;
            }

            ImageView.Image = _cellImage;
        }

        public void SetMetadata (DropboxManager.Metadata data)
        {
            _cts = new CancellationTokenSource ();

            TextLabel.Text = data.Path;
            DetailTextLabel.Text = data.Size;

            var path = GetThumbnailPath (data.Path);
            Services.Dropbox.LoadThumbnailAsync (data.Path, "xs", path, _cts.Token).ContinueWith (t => {
                if (_cts != null && _cts.IsCancellationRequested)
                    return;

                BeginInvokeOnMainThread (() => {
                    ImageView.Image = UIImage.FromFile (path);
                });
            });

        }

        static readonly string _cachePath = Environment.GetFolderPath (Environment.SpecialFolder.InternetCache);

        public static string GetThumbnailPath (string path)
        {
            return Path.Combine (_cachePath, path.Substring (1));
        }

        public void SetProgress (float progress)
        {
            BeginInvokeOnMainThread (() => {
                DetailTextLabel.Text = String.Format ("{0}%", progress * 100);
            });
        }
	}
}
